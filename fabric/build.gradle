architectury {
    platformSetupLoomIde(); fabric()
    minecraft = minecraft_version
}

configurations {
    common { canBeResolved = true; canBeConsumed = false }
    shadowBundle { canBeResolved = true; canBeConsumed = false }
    compileClasspath.extendsFrom(common)
    runtimeClasspath.extendsFrom(common)
    developmentFabric.extendsFrom(common)
}

dependencies {
    mappings loom.officialMojangMappings()
    minecraft 'net.minecraft:minecraft:' + minecraft_version
    modImplementation 'net.fabricmc:fabric-loader:' + fabric_loader_version
    modImplementation 'net.fabricmc.fabric-api:fabric-api:' + fabric_api_version
    modImplementation 'com.terraformersmc:modmenu:' + modmenu_version
    modImplementation 'fuzs.forgeconfigapiport:forgeconfigapiport-fabric:' + forgeconfigapiport_version
    common(project(path: ':common', configuration: 'namedElements')) { transitive = false }
    shadowBundle(project(path: ':common', configuration: 'transformProductionFabric'))
}

shadowJar {
    archiveBaseName = archives_name
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = project.name + '-dev-shadow'
}

remapJar {
    archiveBaseName = archives_name
    inputFile = shadowJar.archiveFile
    archiveClassifier = project.name
}