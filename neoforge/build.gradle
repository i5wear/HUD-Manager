architectury {
    platformSetupLoomIde(); neoForge()
    minecraft = minecraft_version
}

configurations {
    common { canBeResolved = true; canBeConsumed = false }
    shadowBundle { canBeResolved = true; canBeConsumed = false }
    compileClasspath.extendsFrom(common)
    runtimeClasspath.extendsFrom(common)
    developmentNeoForge.extendsFrom(common)
}

dependencies {
    mappings loom.officialMojangMappings()
    minecraft 'net.minecraft:minecraft:' + minecraft_version
    neoForge 'net.neoforged:neoforge:' + neoforge_version
    common(project(path: ':common', configuration: 'namedElements')) { transitive = false }
    shadowBundle(project(path: ':common', configuration: 'transformProductionNeoForge'))
}

shadowJar {
    archiveBaseName = archives_name
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = project.name + '-dev-shadow'
}

remapJar {
    archiveBaseName = archives_name
    inputFile = shadowJar.archiveFile
    archiveClassifier = project.name
}