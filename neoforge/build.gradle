architectury {
    platformSetupLoomIde(); neoForge()
    minecraft = minecraft_version
}

configurations {
    common { canBeResolved = true; canBeConsumed = false }
    bundle { canBeResolved = true; canBeConsumed = false }
    compileClasspath.extendsFrom(common)
    runtimeClasspath.extendsFrom(common)
    developmentNeoForge.extendsFrom(common)
}

dependencies {
    mappings loom.officialMojangMappings()
    minecraft 'net.minecraft:minecraft:' + minecraft_version
    neoForge 'net.neoforged:neoforge:' + neoforge_version
    common project(path: ':common', configuration: 'namedElements')
    bundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

shadowJar {
    configurations = [project.configurations.bundle]
    archiveClassifier = project.name + '-dev-shadow'
}

remapJar {
    inputFile = shadowJar.archiveFile
    archiveClassifier = project.name
}